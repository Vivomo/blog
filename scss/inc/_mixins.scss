@charset "UTF-8";
@mixin css3($key, $value) {
	-webkit-#{$key}: $value;
	-moz-#{$key}: $value;
	-ms-#{$key}: $value;
	#{$key}: $value;
}

@mixin clear{
	content: '';
	display: block;
	clear: both;
}
@mixin circle($r) {
	width: $r;
	height: $r;
	border-radius: 50%;
}
@mixin ellipsis($line:1){
    overflow: hidden;
    text-overflow: ellipsis;
	@if $line == 1{
		white-space: nowrap;
		word-wrap: normal;
	} @else {
		display: -webkit-box;
		-webkit-line-clamp: $line;
		-webkit-box-orient: vertical;
	}

}

@mixin xyCenter{
	position: absolute;
	left: 50%;
	top: 50%;
	@include css3(transform, translate(-50%,-50%));
}

@mixin vCenter{
	/* Firefox */
	display:-moz-box;
	-moz-box-align:center;

	/* Safari、Opera 以及 Chrome */
	display:-webkit-box;
	-webkit-box-align:center;

}

@mixin flexCenter{
	display: -webkit-flex;
	display:         flex;
	-webkit-align-items: center;
	align-items: center;
	-webkit-justify-content: center;
	justify-content: center;
}

@mixin rect2($top, $left, $w:initail, $h:initail) {
	top: $top;
	left: $left;
	width: $w;
	height: $h;
}

@mixin rect2r($top, $right, $w:initail, $h:initail) {
	top: $top;
	right: $right;
	width: $w;
	height: $h;
}

@mixin rect3($top, $left, $right, $w:initail, $h:initail){
	@include rect2($top, $left, $w, $h);
	right: $right;
}

@mixin rect3b($bottom, $left, $right, $h:initail){
	left: $left;
	right: $right;
	bottom: $bottom;
	height: $h;
}

@mixin rect($top, $bottom, $left, $right){
	top: $top;
	left: $left;
	right: $right;
	bottom: $bottom;
}

@mixin opacity($num) {
	@if $num < 1 {
		opacity: $num;
		filter: alpha(opacity=100*$num);
	} @else {
		opacity: $num / 100;
		filter: alpha(opacity=$num);
	}

}

//作者：铁皮饭盒
//链接：https://juejin.im/post/5d70a030f265da03a715f3fd
@mixin thinBorder($directionMaps: bottom, $color: #ccc, $radius:(0, 0, 0, 0), $position: after) {
	// 是否只有一个方向
	$isOnlyOneDir: string==type-of($directionMaps);

	@if ($isOnlyOneDir) {
		$directionMaps: ($directionMaps);
	}

	@each $directionMap in $directionMaps {
		border-#{$directionMap}: 1px solid $color;
	}

	// 判断圆角是list还是number
	@if(list==type-of($radius)) {
		border-radius: nth($radius, 1) nth($radius, 2) nth($radius, 3) nth($radius, 4);
	}

	@else {
		border-radius: $radius;
	}

	@media only screen and (-webkit-min-device-pixel-ratio: 2) {
		& {
			position: relative;

			// 删除1像素密度比下的边框
			@each $directionMap in $directionMaps {
				border-#{$directionMap}: none;
			}
		}

		&:#{$position} {
			content: "";
			position: absolute;
			top: 0;
			left: 0;
			display: block;
			width: 200%;
			height: 200%;
			transform: scale(0.5);
			box-sizing: border-box;
			padding: 1px;
			transform-origin: 0 0;
			pointer-events: none;
			border: 0 solid $color;

			@each $directionMap in $directionMaps {
				border-#{$directionMap}-width: 1px;
			}

			// 判断圆角是list还是number
			@if(list==type-of($radius)) {
				border-radius: nth($radius, 1)*2 nth($radius, 2)*2 nth($radius, 3)*2 nth($radius, 4)*2;
			}

			@else {
				border-radius: $radius*2;
			}

		}
	}

	@media only screen and (-webkit-min-device-pixel-ratio: 3) {
		&:#{$position} {

			// 判断圆角是list还是number
			@if(list==type-of($radius)) {
				border-radius: nth($radius, 1)*3 nth($radius, 2)*3 nth($radius, 3)*3 nth($radius, 4)*3;
			}

			@else {
				border-radius: $radius*3;
			}

			width: 300%;
			height: 300%;
			transform: scale(0.3333);
		}
	}
}
